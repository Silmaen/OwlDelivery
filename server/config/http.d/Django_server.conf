# This is a default site configuration which will simply return 404, preventing
# chance access to any other virtualhost.

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # serving static data
    location /static {
        root /server/data;
    }

    # serving media data
    location /media {
        alias /data;
    }

    # large file upload
    location /upload {
        # After upload, pass altered request body to this django view
        upload_pass   /api;
        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /data/_upload 1;
        upload_store_access user:rw group:rw all:rw;
        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        # Here is where you define additional fields to pass through to upload_complete
        upload_pass_form_field "^action$";
        upload_pass_form_field "^name$";
        upload_pass_form_field "^hash$";
        upload_pass_form_field "^branch$";
        upload_pass_form_field "^flavor_name$";
        upload_pass_form_field "^date$";
        upload_pass_form_field "^rev_type$";
        upload_cleanup 400-599;
    }

    # the rest goes to gunicorn
    location / {
        proxy_pass http://127.0.0.1:8000/;
        proxy_read_timeout 1200;
        proxy_redirect off;
        proxy_buffering off;
        proxy_store off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # You may need this to prevent return 404 recursion.
    location = /404.html {
        internal;
    }
}